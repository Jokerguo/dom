{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","newNode","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","x","arr","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","console","log","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.09feb2c3.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string){\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim()\r\n        return container.content.firstChild\r\n    },\r\n    after(node,newNode){\r\n        node.parentNode.insertBefore(newNode,node.nextSibling)\r\n    },\r\n    before(node,newNode){\r\n        node.parentNode.insertBefore(newNode,node)\r\n    },\r\n    append(parent,node){\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node,parent){\r\n        dom.before(node,parent)\r\n        dom.append(parent,node)\r\n    },\r\n//\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node   \r\n    },\r\n    empty(node){\r\n        const  arr = []\r\n        let x = node.firstChild\r\n        while(x){\r\n            arr.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return arr \r\n    },\r\n//\r\n    attr(node ,name , value){\r\n        if(arguments.length === 3){   // 参数个数写不同代码叫做重载\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n\r\n    text(node,value){\r\n        if(arguments.length === 2 ){       \r\n            if('innerText' in node){   //适配\r\n                node.innerText = value   //ie\r\n            }else{\r\n                node.textContent = value   //firefox  chrome\r\n            }\r\n        }else if(arguments.length === 1){\r\n            if('innerText' in node){   //适配\r\n                return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n\r\n    html(node , string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string\r\n        }else if(arguments.length === 1 ){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n\r\n    style(node , name,value){\r\n        if(arguments.length ===3){\r\n            //style(test , 'color','red')\r\n            node.style[name] = value\r\n        }else if(arguments.length === 2){\r\n            if(typeof name === 'string'){\r\n                // style(test , 'color')\r\n                return node.style[name]\r\n            }else if(name instanceof Object){  \r\n                // dom.style(test , {border : '1px solid red',color : 'blue'})\r\n                for(let key in name){\r\n                    node.style[key] = name[key]\r\n                    console.log(name[key])\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    class : {\r\n        add(node,className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node,className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n\r\n    },\r\n\r\n    find(selector,scope){   //scope范围\r\n        return (scope ||document ).querySelectorAll(selector)\r\n    },\r\n\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    children(node){\r\n        return node.children\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(n=> n!==node)\r\n        //filter 过滤\r\n    },\r\n\r\n    next(node){\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType === 3){\r\n            console.log(x)\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n\r\n    previous(node){\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i = 0 ; i<list.length;i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n\r\n}\r\n"]}